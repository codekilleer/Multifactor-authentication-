

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.event.KeyEvent;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import javax.swing.JOptionPane;
import java.net.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author agupt263
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    static Socket s;
    public Login() {
        initComponents();
        create_connection();
    }

    Login(Socket s, ObjectInputStream in, ObjectOutputStream out) 
    {
        initComponents();
        this.s=s;
        this.in=in;
        objectOutput=out;
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        loginb = new javax.swing.JButton();
        id = new javax.swing.JTextField();
        pass = new javax.swing.JPasswordField();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login Panel");
        setBackground(new java.awt.Color(51, 51, 51));
        setForeground(new java.awt.Color(204, 204, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        loginb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        loginb.setText("Login");
        loginb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginbMouseClicked(evt);
            }
        });
        loginb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginbActionPerformed(evt);
            }
        });

        id.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        id.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        id.setText("Enter Email");
        id.setToolTipText("LoginID");
        id.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idMouseClicked(evt);
            }
        });
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        pass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pass.setText("jPasswordField1");
        pass.setToolTipText("Password");
        pass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passMouseClicked(evt);
            }
        });
        pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passActionPerformed(evt);
            }
        });
        pass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passKeyPressed(evt);
            }
        });

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setBackground(new java.awt.Color(102, 102, 102));
        label1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label1.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        label1.setForeground(new java.awt.Color(255, 208, 7));
        label1.setText("Login Panel ");

        label2.setAlignment(java.awt.Label.CENTER);
        label2.setBackground(new java.awt.Color(102, 102, 102));
        label2.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        label2.setForeground(new java.awt.Color(255, 208, 7));
        label2.setText("Multi-factor Authenticator ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label2, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loginb, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pass, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .addComponent(id))
                .addGap(180, 180, 180))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginb, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void idActionPerformed(java.awt.event.ActionEvent evt) {                                   
        // TODO add your handling code here:
    }                                  

    private void loginbActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void passActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
    }                                    

    private void passMouseClicked(java.awt.event.MouseEvent evt) {                                  
        if (pass.getText().equalsIgnoreCase("jPasswordField1"))
        {
            pass.setText("");
        }
    }                                 

    private void idMouseClicked(java.awt.event.MouseEvent evt) {                                
        if (id.getText().equalsIgnoreCase("Enter Email"))
        {
            id.setText("");
        }
        
    }                               

    private void loginstart()
    {
        int r=Client_exist_check(id.getText(),pass.getText());
        
        if (r==1)
        {
            JOptionPane.showMessageDialog(this, "User Not Exist", "User Warning", JOptionPane.ERROR_MESSAGE);
        }
        else if(r==2)
        {
            JOptionPane.showMessageDialog(this, "Passcode Wrong", "Passcode Warning", JOptionPane.ERROR_MESSAGE);
        }
        else if(r==3)
        {
            try {
                Thread.sleep(5000);
            } catch (InterruptedException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            boolean rep;
            do
            {
                rep=false;
                String t=JOptionPane.showInputDialog(rootPane, "Enter Your OTP");
                
                if (t!=null)
                {
                    if (!t.isEmpty() && t!=(""+JOptionPane.CANCEL_OPTION))
                    {
                        String checkotpval=Check_OTP(t);
                        if (checkotpval.equalsIgnoreCase("true"))
                        {
                            JOptionPane.showMessageDialog(this, "Login Successful", "Success", JOptionPane.PLAIN_MESSAGE);
                            closewindow();
                        
                        }
                        else if (checkotpval.equalsIgnoreCase("false"))
                        {
                            JOptionPane.showMessageDialog(this, "Login Uncessful", "Login Error", JOptionPane.ERROR_MESSAGE);
                        }
                        else if (checkotpval.equalsIgnoreCase("Timeout"))
                        {
                            JOptionPane.showMessageDialog(this, "OTP Expired\nPlease do the process again", "Login Fail", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    else if (t.isEmpty() && t!=(""+JOptionPane.CANCEL_OPTION))
                    {
                        JOptionPane.showMessageDialog(this, "Enter OTP", "No OTP Error", JOptionPane.ERROR_MESSAGE);
                        rep=true;
                    }
                }
                else
                {
                    try {
                        objectOutput.writeObject("OTPcancel");
                        objectOutput.flush();
                        objectOutput.reset();
                    } catch (IOException ex) {
                        Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }while(rep);
        }
        else if(r==4)
        {
            JOptionPane.showMessageDialog(this, "OTP Error", "Can not send OTP /n Contact Administrator", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "An Error Has Occure", "System Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void loginbMouseClicked(java.awt.event.MouseEvent evt) {                                    
        loginstart();
        
    }                                   

    private void passKeyPressed(java.awt.event.KeyEvent evt) {                                
        if (evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            loginstart();
        }
    }                               

    private void formWindowClosing(java.awt.event.WindowEvent evt) {                                   
        try 
        {
            objectOutput.writeObject("fin_connection");
            objectOutput.flush();
            objectOutput.reset();
            
            close_connection();
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                  
    
    private void closewindow()
    {
        Dashboard ob=new Dashboard(s, objectOutput, in, id.getText(), pass.getText());
        ob.setVisible(true);
        this.dispose();
    }
    private  void create_connection()
    {
        try {
            s=new Socket("localhost", 2424);
            objectOutput = new ObjectOutputStream(s.getOutputStream());
            in=new ObjectInputStream(s.getInputStream());
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void close_connection()
    {
        try {
            objectOutput.close();
            in.close();
            s.close();
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    ObjectOutputStream objectOutput =null;
    ObjectInputStream in=null;
    private  String Check_OTP(String otp)
    {
        String ret = null;
        try 
        {
            
            objectOutput.writeObject(otp);
            objectOutput.flush();
            objectOutput.reset();
            
            ret=(String) in.readObject();
            
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ret;
    }
    private  int Client_exist_check(String id,String passcode)
    {
        try {
            ArrayList<String> credentials =  new ArrayList<>();
            credentials.add(id);
            credentials.add(passcode);
            
            objectOutput.writeObject(credentials);
            objectOutput.flush();
            objectOutput.reset();
            Object object = in.readObject();
            
            
            int ret=(int) object;
            return ret;
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        return 5;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextField id;
    private javax.swing.JPanel jPanel1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private javax.swing.JButton loginb;
    private javax.swing.JPasswordField pass;
    // End of variables declaration                   
}
